# Generated by Django 4.2 on 2023-08-03 01:14

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=64, verbose_name='菜单名称')),
                ('another_name', models.CharField(max_length=64, null=True, verbose_name='菜单别名')),
                ('type', models.CharField(max_length=64, verbose_name='菜单类型')),
                ('reveal', models.CharField(max_length=64, null=True, verbose_name='是否显示')),
                ('path', models.CharField(max_length=128, null=True, verbose_name='菜单URL')),
                ('menu_name', models.CharField(max_length=128, null=True, verbose_name='菜单Name')),
                ('component_address', models.CharField(max_length=128, null=True, verbose_name='组件地址')),
                ('sequence', models.CharField(max_length=128, null=True, verbose_name='菜单顺序')),
                ('redirect', models.CharField(max_length=128, null=True, verbose_name='重定向')),
                ('menu_icon', models.CharField(max_length=64, null=True, verbose_name='菜单Icon')),
                ('status', models.CharField(default='正常', max_length=64, verbose_name='菜单状态')),
                ('parent_menu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.menu', verbose_name='父菜单')),
            ],
            options={
                'verbose_name_plural': '菜单表',
            },
        ),
        migrations.CreateModel(
            name='Characters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, verbose_name='角色名称')),
                ('note', models.TextField(null=True, verbose_name='备注')),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('change_date', models.DateTimeField(auto_now=True, null=True, verbose_name='创建时间')),
                ('menu', models.ManyToManyField(null=True, to='user.menu', verbose_name='角色权限')),
            ],
            options={
                'verbose_name_plural': '角色表',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=32, null=True, verbose_name='姓名')),
                ('gender', models.CharField(max_length=32, null=True, verbose_name='性别')),
                ('age', models.IntegerField(null=True, verbose_name='年龄')),
                ('phone', models.CharField(max_length=32, null=True, verbose_name='手机号')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.characters', verbose_name='角色')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '用户表',
                'index_together': {('username', 'phone')},
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
